message NRequestPlayers {
}

message NCmd {
	required uint32 Cmd = 1;
}

message NClientId {
	required uint32 Id = 1;
	// This client's players will use UID from this number
	required uint32 FirstPlayerUID = 2;
}

message NCampaignDef {
	required string Path = 1;
	required int32 GameMode = 2;
	required uint32 Mission = 3;
}

message NCharLooks {
	required int32 Face = 1;
	required int32 Skin = 2;
	required int32 Arm = 3;
	required int32 Body = 4;
	required int32 Leg = 5;
	required int32 Hair = 6;
}

message NPlayerData {
	required string Name = 1;
	required NCharLooks Looks = 2;
	repeated string Weapons = 3;
	required uint32 Lives = 4;
	required int32 Score = 5;
	required int32 TotalScore = 6;
	required int32 Kills = 7;
	required int32 Suicides = 8;
	required int32 Friendlies = 9;
	required uint32 MaxHealth = 10;
	required uint32 LastMission = 11;
	required uint32 UID = 12;
}

message NObjectiveCount {
	required uint32 ObjectiveId = 1;
	required uint32 Count = 2;
}

message NAddPlayers {
	repeated NPlayerData PlayerDatas = 2;
}

message NAddMapObject {
	required uint32 UID = 1;
	required string MapObjectClass = 2;
	required NVec2i Pos = 3;
	required uint32 TileItemFlags = 4;
	required int32 Health = 5;
}

message NScore {
	required uint32 PlayerUID = 1;
	required int32 Score = 2;
}

message NSound {
	required string Sound = 1;
	required NVec2i Pos = 2;
}

message NVec2i {
	required int32 x = 1;
	required int32 y = 2;
}

message NActorAdd {
	required uint32 UID = 1;
	required uint32 CharId = 2;
	required int32 Direction = 3;
	required int32 Health = 4;
	required int32 PlayerUID = 5 [default=-1];
	required uint32 TileItemFlags = 6;
	required NVec2i FullPos = 7;
}

message NActorMove {
	required uint32 UID = 1;
	required NVec2i Pos = 2;
}

message NActorState {
	required uint32 UID = 1;
	required int32 State = 2;
}

message NActorDir {
	required uint32 UID = 1;
	required int32 Dir = 2;
}

message NActorSwitchGun {
	required uint32 UID = 1;
	required uint32 GunIdx = 2;
}

message NActorPickupAll {
	required uint32 UID = 1;
	required bool PickupAll = 2;
}

message NActorReplaceGun {
	required uint32 UID = 1;
	// Index of gun in actor to replace
	required uint32 GunIdx = 2;
	required string Gun = 3;
}

message NActorHeal {
	required uint32 UID = 1;
	required int32 PlayerUID = 2 [default=-1];
	required int32 Amount = 3;
	required bool IsRandomSpawned = 4;
}

message NActorAddAmmo {
	required uint32 UID = 1;
	required int32 PlayerUID = 2 [default=-1];
	required uint32 AmmoId = 3;
	required uint32 Amount = 4;
	required bool IsRandomSpawned = 5;
}

message NActorUseAmmo {
	required uint32 UID = 1;
	required int32 PlayerUID = 2 [default=-1];
	required uint32 AmmoId = 3;
	required uint32 Amount = 4;
}

message NAddPickup {
	required uint32 UID = 1;
	required string PickupClass = 2;
	required bool IsRandomSpawned = 3;
	required int32 SpawnerUID = 4 [default=-1];
	required uint32 TileItemFlags = 5;
	required NVec2i Pos = 6;
}

message NRemovePickup {
	required uint32 UID = 1;
	required int32 SpawnerUID = 2 [default=-1];
}

message NGunReload {
	required int32 PlayerUID = 1 [default=-1];
	required string Gun = 2;
	required NVec2i FullPos = 3;
	required int32 Direction = 4;
}

message NGunFire {
	required int32 PlayerUID = 1 [default=-1];
	required string Gun = 2;
	required NVec2i MuzzleFullPos = 3;
	required int32 Z = 4;
	required float Angle = 5;
	required bool Sound = 6;
}

message NAddBullet {
	required string BulletClass = 1;
	required NVec2i MuzzlePos = 2;
	required int32 MuzzleHeight = 3;
	required float Angle = 4;
	required int32 Elevation = 5;
	required uint32 Flags = 6;
	required int32 PlayerUID = 7;
	required int32 UID = 8;
}

message NTrigger {
	required uint32 ID = 1;
	required NVec2i Tile = 2;
}

message NExploreTile {
	required NVec2i Tile = 1;
}

message NRescueCharacter {
	required uint32 UID = 1;
}

message NObjectiveUpdate {
	required uint32 ObjectiveId = 1;
	required int32 Count = 2;
}

message NAddKeys {
	required uint32 KeyFlags = 1;
	required NVec2i Pos = 2;
}

message NMissionComplete {
	required bool ShowMsg = 1;
}